{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-10T18:39:09.836Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-10T18:39:09.847Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-10T18:39:09.848Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-10T18:39:09.849Z"}
{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-10T18:39:52.138Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-10T18:39:52.154Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-10T18:39:52.157Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-10T18:39:52.159Z"}
{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-10T18:44:26.346Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-10T18:44:26.360Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-10T18:44:26.362Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-10T18:44:26.363Z"}
{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-10T20:02:36.055Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-10T20:02:36.068Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-10T20:02:36.070Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-10T20:02:36.072Z"}
{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-11T05:45:41.853Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-11T05:45:41.871Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-11T05:45:41.873Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-11T05:45:41.875Z"}
{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-11T06:37:54.190Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-11T06:37:54.198Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-11T06:37:54.200Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-11T06:37:54.202Z"}
{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-11T06:41:01.489Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-11T06:41:01.500Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-11T06:41:01.502Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-11T06:41:01.504Z"}
{"kind":"ObjectId","level":"error","message":"Error placing trade: Cast to ObjectId failed for value \"EVENT_ID\" (type string) at path \"_id\" for model \"Event\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"EVENT_ID\" (type string) at path \"_id\" for model \"Event\"\n    at SchemaObjectId.cast (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\cast.js:390:32)\n    at Query.cast (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\query.js:4907:12)\n    at Query._castConditions (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\query.js:2325:10)\n    at model.Query._findOne (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\query.js:2648:8)\n    at model.Query.exec (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\query.js:4456:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\src\\routes\\trades.js:28:23","stringValue":"\"EVENT_ID\"","timestamp":"2025-03-11T07:21:36.891Z","value":"EVENT_ID","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Error placing trade: Cast to ObjectId failed for value \"EVENT_ID\" (type string) at path \"_id\" for model \"Event\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"EVENT_ID\" (type string) at path \"_id\" for model \"Event\"\n    at SchemaObjectId.cast (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\cast.js:390:32)\n    at Query.cast (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\query.js:4907:12)\n    at Query._castConditions (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\query.js:2325:10)\n    at model.Query._findOne (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\query.js:2648:8)\n    at model.Query.exec (C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\node_modules\\mongoose\\lib\\query.js:4456:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async C:\\Users\\sonus\\OneDrive\\Desktop\\Option Trading\\backend\\src\\routes\\trades.js:28:23","stringValue":"\"EVENT_ID\"","timestamp":"2025-03-11T07:22:46.745Z","value":"EVENT_ID","valueType":"string"}
{"level":"warn","message":"MongoDB connection disconnected","timestamp":"2025-03-11T10:04:51.352Z"}
{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-11T11:02:26.111Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-11T11:02:26.119Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-11T11:02:26.121Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-11T11:02:26.122Z"}
{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-11T11:02:30.436Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-11T11:02:30.445Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-11T11:02:30.447Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-11T11:02:30.448Z"}
{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-11T11:07:03.448Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-11T11:07:03.457Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-11T11:07:03.458Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-11T11:07:03.459Z"}
{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-11T11:07:11.857Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-11T11:07:11.865Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-11T11:07:11.867Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-11T11:07:11.868Z"}
{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-11T11:08:39.538Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-11T11:08:39.545Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-11T11:08:39.547Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-11T11:08:39.548Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T11:13:39.528Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T11:18:39.490Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T11:23:39.499Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T11:28:39.510Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T11:33:39.510Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T11:38:39.523Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T11:43:39.537Z"}
{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-11T11:46:36.276Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-11T11:46:36.293Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-11T11:46:36.296Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-11T11:46:36.297Z"}
{"level":"info","message":"Successfully connected to MongoDB.","timestamp":"2025-03-11T11:46:45.178Z"}
{"level":"info","message":"Server running in development mode on port 3000","timestamp":"2025-03-11T11:46:45.191Z"}
{"level":"info","message":"API endpoints available at /api","timestamp":"2025-03-11T11:46:45.193Z"}
{"level":"info","message":"WebSocket server running at /ws","timestamp":"2025-03-11T11:46:45.195Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T11:51:45.137Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T11:56:45.101Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T12:01:45.107Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T12:06:45.116Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T12:11:45.123Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T12:16:45.124Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T12:21:45.137Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T12:26:45.145Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T12:31:45.148Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T12:36:45.155Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T12:41:45.169Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T12:46:45.184Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T15:51:19.329Z"}
{"level":"info","message":"Data sync completed successfully","timestamp":"2025-03-11T19:43:28.583Z"}
